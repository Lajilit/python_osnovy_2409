Index: lesson_1_homework_4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.\r\n# Для решения используйте цикл while и арифметические операции.\r\n\r\n\r\nnumber = int(input('Введите целое положительное число: '))\r\nmax_digit = 0\r\n\r\nwhile number > 0:\r\n# оригинальный код\r\n    # if number % 10 > max_digit:\r\n    #     max_digit = number % 10\r\n    # number = number // 10\r\n\r\n# первый вариант исправления\r\n    # number, remainder = number // 10, number % 10\r\n    # if remainder > max_digit:\r\n    #     max_digit = remainder\r\n\r\n# второй вариант исправления, встроенная функция divmod одновременно делит и убирает остаток от деления\r\n    number, remainder = divmod(number, 10)\r\n    if remainder > max_digit:\r\n        max_digit = remainder\r\n\r\nprint(max_digit)
===================================================================
--- lesson_1_homework_4.py	(revision afcda32b89c4264885597cdb469fca475ba24067)
+++ lesson_1_homework_4.py	(date 1601313472263)
@@ -6,19 +6,19 @@
 max_digit = 0
 
 while number > 0:
-# оригинальный код
+    # оригинальный код
     # if number % 10 > max_digit:
     #     max_digit = number % 10
     # number = number // 10
 
-# первый вариант исправления
+    # первый вариант исправления
     # number, remainder = number // 10, number % 10
     # if remainder > max_digit:
     #     max_digit = remainder
 
-# второй вариант исправления, встроенная функция divmod одновременно делит и убирает остаток от деления
+    # второй вариант исправления, встроенная функция divmod() одновременно делит и убирает остаток от деления
     number, remainder = divmod(number, 10)
-    if remainder > max_digit:
-        max_digit = remainder
-
-print(max_digit)
\ No newline at end of file
+    # if remainder > max_digit:
+    #     max_digit = remainder
+    max_digit = max(max_digit, remainder)
+print(max_digit)
Index: lesson_1_homework_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.\r\n# Используйте форматирование строк.\r\ntry:\r\n    time_sec = int(input(\"Введите время в секундах: \"))\r\n    if time_sec < 0:\r\n        raise ValueError\r\nexcept ValueError:\r\n    print('Нужно ввести положительное число')\r\nelse:\r\n    hour = time_sec // 3600\r\n    if hour < 10:\r\n        hour = '0' + str(hour)\r\n    else:\r\n        hour = str(hour)\r\n    minute = time_sec % 3600 // 60\r\n    if minute < 10:\r\n        minute = '0' + str(minute)\r\n    else:\r\n        minute = str(minute)\r\n    second = time_sec % 60\r\n    if second < 10:\r\n        second = '0' + str(second)\r\n    else:\r\n        second = str(second)\r\n    print(f'{time_sec} сек. = {hour}:{minute}:{second}')\r\n\r\n
===================================================================
--- lesson_1_homework_2.py	(revision afcda32b89c4264885597cdb469fca475ba24067)
+++ lesson_1_homework_2.py	(date 1601313472224)
@@ -8,19 +8,18 @@
     print('Нужно ввести положительное число')
 else:
     hour = time_sec // 3600
-    if hour < 10:
-        hour = '0' + str(hour)
-    else:
-        hour = str(hour)
+    # if hour < 10:
+    #     hour = '0' + str(hour)
+    # else:
+    #     hour = str(hour)
     minute = time_sec % 3600 // 60
-    if minute < 10:
-        minute = '0' + str(minute)
-    else:
-        minute = str(minute)
+    # if minute < 10:
+    #     minute = '0' + str(minute)
+    # else:
+    #     minute = str(minute)
     second = time_sec % 60
-    if second < 10:
-        second = '0' + str(second)
-    else:
-        second = str(second)
-    print(f'{time_sec} сек. = {hour}:{minute}:{second}')
-
+    # if second < 10:
+    #     second = '0' + str(second)
+    # else:
+    #     second = str(second)
+    print(f'{hour:02}:{minute:02}:{second:02}')
